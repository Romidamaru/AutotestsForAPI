{"name": "Test Authorized endpoint - Successful Authentication", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected response content: {'code': '1207', 'message': 'User not found!'}\nassert {'code': '120...r not found!'} == {'code': '120...er not found'}\n  \n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'message': 'User not found!'} != {'message': 'User not found'}\n  Use -v to get more diff", "trace": "@allure.title(\"Test Authorized endpoint - Successful Authentication\")\n    def test_authorized_success():\n        with allure.step(\"Sending POST request to Authorized endpoint\"):\n            response = requests.post(f\"{BASE_URL}/Authorized\", json=example_user)\n    \n        if response.status_code == 200:\n            assert response.json() == True, f\"Unexpected response content: {response.json()}\"\n        elif response.status_code == 404:\n>           assert response.json() == {\"code\": \"1207\", \"message\": \"User not found\"}, f\"Unexpected response content: {response.json()}\"\nE           AssertionError: Unexpected response content: {'code': '1207', 'message': 'User not found!'}\nE           assert {'code': '120...r not found!'} == {'code': '120...er not found'}\nE             \nE             Omitting 1 identical items, use -vv to show\nE             Differing items:\nE             {'message': 'User not found!'} != {'message': 'User not found'}\nE             Use -v to get more diff\n\nswagger_test.py:21: AssertionError"}, "steps": [{"name": "Sending POST request to Authorized endpoint", "status": "passed", "start": 1715437323439, "stop": 1715437324511}], "start": 1715437323439, "stop": 1715437324514, "uuid": "863bb4d2-d2aa-43ed-81e7-cbe35f8499fa", "historyId": "af4f21644c68840652a7a5c4bccab2a8", "testCaseId": "af4f21644c68840652a7a5c4bccab2a8", "fullName": "swagger_test#test_authorized_success", "labels": [{"name": "suite", "value": "swagger_test"}, {"name": "host", "value": "Romidamaru"}, {"name": "thread", "value": "12684-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "swagger_test"}]}