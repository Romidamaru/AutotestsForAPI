{"name": "Test Get User Details endpoint", "status": "failed", "statusDetails": {"message": "AssertionError: Failed to get user details: 401 {'code': '1207', 'message': 'User not found!'}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code", "trace": "@allure.title(\"Test Get User Details endpoint\")\n    def test_get_user_details():\n        global token\n        user_id = \"1\"\n        with allure.step(\"Sending GET request to Get User Details endpoint\"):\n            assert token is not None, \"Token is not generated\"\n            headers = {'Authorization': f'Bearer {token}'}\n            response = requests.get(f\"{BASE_URL}/User/{user_id}\", headers=headers)\n>           assert response.status_code == 200, f\"Failed to get user details: {response.status_code} {response.json()}\"\nE           AssertionError: Failed to get user details: 401 {'code': '1207', 'message': 'User not found!'}\nE           assert 401 == 200\nE            +  where 401 = <Response [401]>.status_code\n\nswagger_test.py:45: AssertionError"}, "steps": [{"name": "Sending GET request to Get User Details endpoint", "status": "failed", "statusDetails": {"message": "AssertionError: Failed to get user details: 401 {'code': '1207', 'message': 'User not found!'}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code\n", "trace": "  File \"C:\\Users\\Romidamaru\\Desktop\\Основная\\Коды\\swagger_test\\swagger_test.py\", line 45, in test_get_user_details\n    assert response.status_code == 200, f\"Failed to get user details: {response.status_code} {response.json()}\"\n"}, "start": 1715448622062, "stop": 1715448622845}], "start": 1715448622062, "stop": 1715448622846, "uuid": "6c1f43a9-4268-4b3d-8c6e-3874d0b62ca1", "historyId": "4fa7c63d6a437616fb2dbeda5c89433f", "testCaseId": "4fa7c63d6a437616fb2dbeda5c89433f", "fullName": "swagger_test#test_get_user_details", "labels": [{"name": "suite", "value": "swagger_test"}, {"name": "host", "value": "Romidamaru"}, {"name": "thread", "value": "6648-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "swagger_test"}]}